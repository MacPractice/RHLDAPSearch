#!/bin/sh

# Define the development environment
export DEVROOT=/Developer/Platforms/iPhoneOS.platform/Developer
export SDKROOT=$DEVROOT/SDKs/iPhoneOS3.0.sdk
export SIMDEVROOT=/Developer/Platforms/iPhoneSimulator.platform/Developer
export SIMSDKROOT=$SIMDEVROOT/SDKs/iPhoneSimulator3.0.sdk

# Save relevant environment
#CFLAGS="-arch i386"
U_CC=$CC
U_CFLAGS="$CPPFLAGS -arch i386 -pipe -no-cpp-precomp -isysroot $SIMSDKROOT"
U_LD=$LD
U_LDFLAGS=$LDFLAGS
U_CPP="/usr/bin/cpp $CPPFLAGS"
U_CPPFLAGS="-I$SIMSDKROOT/usr/lib/gcc/i686-apple-darwin10/4.0.1/include/ -I$SIMSDKROOT/usr/include/"

# ARM-arch compilation flags
export CPPFLAGS="-I$SDKROOT/usr/lib/gcc/arm-apple-darwin9/4.0.1/include/ -I$SDKROOT/usr/include/"
export CFLAGS="$CPPFLAGS -arch armv6 -pipe -no-cpp-precomp -isysroot $SDKROOT"
export CPP="/usr/bin/cpp $CPPFLAGS"

# dynamic library location generated by the Unix package
# LIBPATH=src/.libs/<libname>.dylib
LIBLDAP_PATH=libraries/libldap/.libs/libldap.dylib
LIBLBER_PATH=libraries/liblber/.libs/liblber.dylib
LIBLDAP_NAME=`basename $LIBLDAP_PATH`
LIBLBER_NAME=`basename $LIBLBER_PATH`

export LDFLAGS="-L$SDKROOT/usr/lib/ -Wl,-dylib_install_name,@executable_path/$LIBNAME"

# static library that will be generated
# LIBPATH_static=libraries/libldap/.libs/libldap.a
LIBLDAP_PATH_static=libraries/libldap/.libs/libldap.a
LIBLBER_PATH_static=libraries/liblber/.libs/liblber.a
LIBLDAP_NAME_static=`basename $LIBLDAP_PATH_static`
LIBLBER_NAME_static=`basename $LIBLBER_PATH_static`

# Configure the software to build for ARM
./configure CC=$DEVROOT/usr/bin/arm-apple-darwin9-gcc-4.0.1 LD=$DEVROOT/usr/bin/ld --host=arm-apple-darwin --without-kerberos --without-tls --disable-kpasswd --without-cyrus-sasl --disable-slapd --disable-backends --disable-overlays --without-gssapi --with-yielding-select=no
make

# Stash the ARM-built libs to the 'lnsout' directory
mkdir -p lnsout
cp $LIBLDAP_PATH_static lnsout/$LIBLDAP_NAME_static.arm
cp $LIBLBER_PATH_static lnsout/$LIBLBER_NAME_static.arm

make distclean

# Use default environment (i386)
export CC=$U_CC
export CFLAGS=$U_CFLAGS
export LD=$U_LD
export LDFLAGS=$U_LDFLAGS
export CPP=$U_CPP
export CPPFLAGS=$U_CPPFLAGS

# Overwrite LDFLAGS
# Dynamic linking, relative to executable_path
# Use otool -D to check the install name
export LDFLAGS="-Wl,-dylib_install_name,@executable_path/$LIBNAME"

# ToDo - error checking
./configure CC=$SIMDEVROOT/usr/bin/i686-apple-darwin10-gcc-4.0.1 LD=$SIMDEVROOT/usr/bin/ld --host=i686-apple-darwin --without-kerberos --without-tls --disable-kpasswd --without-cyrus-sasl --disable-slapd --disable-backends --disable-overlays --without-gssapi
make

# Save generated binaries
cp $LIBLDAP_PATH_static lnsout/$LIBLDAP_NAME_static.i386
cp $LIBLBER_PATH_static lnsout/$LIBLBER_NAME_static.i386

# Create fat lib
$DEVROOT/usr/bin/lipo -arch arm lnsout/$LIBLDAP_NAME_static.arm -arch i386 lnsout/$LIBLDAP_NAME_static.i386 -create -output lnsout/$LIBLDAP_NAME_static
$DEVROOT/usr/bin/lipo -arch arm lnsout/$LIBLBER_NAME_static.arm -arch i386 lnsout/$LIBLBER_NAME_static.i386 -create -output lnsout/$LIBLBER_NAME_static